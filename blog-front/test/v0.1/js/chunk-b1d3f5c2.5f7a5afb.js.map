{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.object.values.js","webpack:///./node_modules/class-validator/esm5/validation/ValidationError.js","webpack:///./node_modules/class-validator/esm5/validation/ValidationUtils.js","webpack:///./node_modules/class-validator/esm5/utils/is-promise.util.js","webpack:///./node_modules/class-validator/esm5/utils/convert-to-array.util.js","webpack:///./node_modules/class-validator/esm5/validation/ValidationExecutor.js","webpack:///./node_modules/class-validator/esm5/validation/Validator.js","webpack:///./node_modules/class-validator/esm5/index.js","webpack:///./node_modules/core-js/internals/object-to-array.js"],"names":["$","$values","values","target","stat","O","ValidationError","prototype","toString","shouldDecorate","hasParent","parentPath","_this","this","boldStart","boldEnd","propConstraintFailed","propertyName","Object","keys","constraints","join","formattedProperty_1","Number","isInteger","property","children","map","childError","constructor","name","constraintToString","constraint","Array","isArray","ValidationUtils","replaceMessageSpecialTokens","message","validationArguments","messageString","Function","forEach","index","replace","RegExp","undefined","value","targetName","isPromise","p","then","convertToArray","val","Map","from","ValidationExecutor","validator","validatorOptions","awaitingPromises","ignoreAsyncValidations","metadataStorage","execute","object","targetSchema","validationErrors","_a","hasValidationMetaData","enableDebugMessages","console","warn","groups","strictGroups","always","targetMetadatas","getTargetValidationMetadatas","groupedMetadatas","groupByPropertyName","forbidUnknownValues","length","validationError","unknownValue","push","whitelist","definedMetadatas","filter","metadata","type","ValidationTypes","IS_DEFINED","metadatas","WHITELIST","Promise","find","PROMISE_VALIDATION","resolvedValue","performValidations","notAllowedProperties","forbidNonWhitelisted","generateValidationError","stripEmptyErrors","errors","error","customValidationMetadatas","CUSTOM_VALIDATION","nestedValidationMetadatas","NESTED_VALIDATION","conditionalValidationMetadatas","CONDITIONAL_VALIDATION","canValidate","conditionalValidations","customValidations","mapContexts","skipUndefinedProperties","skipNullProperties","skipMissingProperties","nestedValidations","reduce","resultA","resultB","getTargetValidatorConstraints","constraintCls","customConstraintMetadata","async","stopAtFirstError","each","Set","arrayValue","validatedSubValues","subValue","instance","validate","validationIsAsync","some","validatedSubValue","asyncValidatedSubValues","resolve","asyncValidationIsFinishedPromise","all","flatValidatedValues","validationResult","every","isValid","createValidationError","context","contexts","assign","_b","validatedValue","promise","arrayLikeValue","customConstraint","customConstraints","getConstraintType","customValidatorMetadata","dismissDefaultMessages","defaultMessage","__awaiter","thisArg","_arguments","P","generator","adopt","reject","fulfilled","step","next","e","rejected","result","done","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","call","pop","Validator","objectOrSchemaName","objectOrValidationOptions","maybeValidatorOptions","coreValidate","validateOrReject","validateSync","options","schema","executor","schemaNameOrObject","DESCRIPTORS","uncurryThis","objectKeys","toIndexedObject","$propertyIsEnumerable","propertyIsEnumerable","createMethod","TO_ENTRIES","it","key","i","module","exports","entries"],"mappings":"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","file":"js/chunk-b1d3f5c2.5f7a5afb.js","sourcesContent":["var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.es/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","/**\n * Validation error description.\n */\nvar ValidationError = /** @class */ (function () {\n    function ValidationError() {\n    }\n    /**\n     *\n     * @param shouldDecorate decorate the message with ANSI formatter escape codes for better readability\n     * @param hasParent true when the error is a child of an another one\n     * @param parentPath path as string to the parent of this property\n     */\n    ValidationError.prototype.toString = function (shouldDecorate, hasParent, parentPath) {\n        var _this = this;\n        if (shouldDecorate === void 0) { shouldDecorate = false; }\n        if (hasParent === void 0) { hasParent = false; }\n        if (parentPath === void 0) { parentPath = \"\"; }\n        var boldStart = shouldDecorate ? \"\\u001B[1m\" : \"\";\n        var boldEnd = shouldDecorate ? \"\\u001B[22m\" : \"\";\n        var propConstraintFailed = function (propertyName) {\n            return \" - property \" + boldStart + parentPath + propertyName + boldEnd + \" has failed the following constraints: \" + boldStart + Object.keys(_this.constraints).join(\", \") + boldEnd + \" \\n\";\n        };\n        if (!hasParent) {\n            return (\"An instance of \" + boldStart + (this.target ? this.target.constructor.name : 'an object') + boldEnd + \" has failed the validation:\\n\" +\n                (this.constraints ? propConstraintFailed(this.property) : \"\") +\n                (this.children\n                    ? this.children.map(function (childError) { return childError.toString(shouldDecorate, true, _this.property); }).join(\"\")\n                    : \"\"));\n        }\n        else {\n            // we format numbers as array indexes for better readability.\n            var formattedProperty_1 = Number.isInteger(+this.property)\n                ? \"[\" + this.property + \"]\"\n                : \"\" + (parentPath ? \".\" : \"\") + this.property;\n            if (this.constraints) {\n                return propConstraintFailed(formattedProperty_1);\n            }\n            else {\n                return this.children\n                    ? this.children\n                        .map(function (childError) { return childError.toString(shouldDecorate, true, \"\" + parentPath + formattedProperty_1); })\n                        .join(\"\")\n                    : \"\";\n            }\n        }\n    };\n    return ValidationError;\n}());\nexport { ValidationError };\n//# sourceMappingURL=ValidationError.js.map","/**\n * Convert the constraint to a string to be shown in an error\n */\nexport function constraintToString(constraint) {\n    if (Array.isArray(constraint)) {\n        return constraint.join(', ');\n    }\n    return \"\" + constraint;\n}\nvar ValidationUtils = /** @class */ (function () {\n    function ValidationUtils() {\n    }\n    ValidationUtils.replaceMessageSpecialTokens = function (message, validationArguments) {\n        var messageString;\n        if (message instanceof Function) {\n            messageString = message(validationArguments);\n        }\n        else if (typeof message === 'string') {\n            messageString = message;\n        }\n        if (messageString && validationArguments.constraints instanceof Array) {\n            validationArguments.constraints.forEach(function (constraint, index) {\n                messageString = messageString.replace(new RegExp(\"\\\\$constraint\" + (index + 1), 'g'), constraintToString(constraint));\n            });\n        }\n        if (messageString &&\n            validationArguments.value !== undefined &&\n            validationArguments.value !== null &&\n            typeof validationArguments.value === 'string')\n            messageString = messageString.replace(/\\$value/g, validationArguments.value);\n        if (messageString)\n            messageString = messageString.replace(/\\$property/g, validationArguments.property);\n        if (messageString)\n            messageString = messageString.replace(/\\$target/g, validationArguments.targetName);\n        return messageString;\n    };\n    return ValidationUtils;\n}());\nexport { ValidationUtils };\n//# sourceMappingURL=ValidationUtils.js.map","// https://github.com/TylorS/typed-is-promise/blob/abf1514e1b6961adfc75765476b0debb96b2c3ae/src/index.ts\nexport function isPromise(p) {\n    return p !== null && typeof p === 'object' && typeof p.then === 'function';\n}\n//# sourceMappingURL=is-promise.util.js.map","/**\n * Convert Map, Set to Array\n */\nexport function convertToArray(val) {\n    if (val instanceof Map) {\n        return Array.from(val.values());\n    }\n    return Array.isArray(val) ? val : Array.from(val);\n}\n//# sourceMappingURL=convert-to-array.util.js.map","import { ValidationError } from './ValidationError';\nimport { ValidationTypes } from './ValidationTypes';\nimport { ValidationUtils } from './ValidationUtils';\nimport { isPromise, convertToArray } from '../utils';\nimport { getMetadataStorage } from '../metadata/MetadataStorage';\n/**\n * Executes validation over given object.\n */\nvar ValidationExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ValidationExecutor(validator, validatorOptions) {\n        this.validator = validator;\n        this.validatorOptions = validatorOptions;\n        // -------------------------------------------------------------------------\n        // Properties\n        // -------------------------------------------------------------------------\n        this.awaitingPromises = [];\n        this.ignoreAsyncValidations = false;\n        // -------------------------------------------------------------------------\n        // Private Properties\n        // -------------------------------------------------------------------------\n        this.metadataStorage = getMetadataStorage();\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    ValidationExecutor.prototype.execute = function (object, targetSchema, validationErrors) {\n        var _this = this;\n        var _a;\n        /**\n         * If there is no metadata registered it means possibly the dependencies are not flatterned and\n         * more than one instance is used.\n         *\n         * TODO: This needs proper handling, forcing to use the same container or some other proper solution.\n         */\n        if (!this.metadataStorage.hasValidationMetaData && ((_a = this.validatorOptions) === null || _a === void 0 ? void 0 : _a.enableDebugMessages) === true) {\n            console.warn(\"No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.\");\n        }\n        var groups = this.validatorOptions ? this.validatorOptions.groups : undefined;\n        var strictGroups = (this.validatorOptions && this.validatorOptions.strictGroups) || false;\n        var always = (this.validatorOptions && this.validatorOptions.always) || false;\n        var targetMetadatas = this.metadataStorage.getTargetValidationMetadatas(object.constructor, targetSchema, always, strictGroups, groups);\n        var groupedMetadatas = this.metadataStorage.groupByPropertyName(targetMetadatas);\n        if (this.validatorOptions && this.validatorOptions.forbidUnknownValues && !targetMetadatas.length) {\n            var validationError = new ValidationError();\n            if (!this.validatorOptions ||\n                !this.validatorOptions.validationError ||\n                this.validatorOptions.validationError.target === undefined ||\n                this.validatorOptions.validationError.target === true)\n                validationError.target = object;\n            validationError.value = undefined;\n            validationError.property = undefined;\n            validationError.children = [];\n            validationError.constraints = { unknownValue: 'an unknown value was passed to the validate function' };\n            validationErrors.push(validationError);\n            return;\n        }\n        if (this.validatorOptions && this.validatorOptions.whitelist)\n            this.whitelist(object, groupedMetadatas, validationErrors);\n        // General validation\n        Object.keys(groupedMetadatas).forEach(function (propertyName) {\n            var value = object[propertyName];\n            var definedMetadatas = groupedMetadatas[propertyName].filter(function (metadata) { return metadata.type === ValidationTypes.IS_DEFINED; });\n            var metadatas = groupedMetadatas[propertyName].filter(function (metadata) { return metadata.type !== ValidationTypes.IS_DEFINED && metadata.type !== ValidationTypes.WHITELIST; });\n            if (value instanceof Promise &&\n                metadatas.find(function (metadata) { return metadata.type === ValidationTypes.PROMISE_VALIDATION; })) {\n                _this.awaitingPromises.push(value.then(function (resolvedValue) {\n                    _this.performValidations(object, resolvedValue, propertyName, definedMetadatas, metadatas, validationErrors);\n                }));\n            }\n            else {\n                _this.performValidations(object, value, propertyName, definedMetadatas, metadatas, validationErrors);\n            }\n        });\n    };\n    ValidationExecutor.prototype.whitelist = function (object, groupedMetadatas, validationErrors) {\n        var _this = this;\n        var notAllowedProperties = [];\n        Object.keys(object).forEach(function (propertyName) {\n            // does this property have no metadata?\n            if (!groupedMetadatas[propertyName] || groupedMetadatas[propertyName].length === 0)\n                notAllowedProperties.push(propertyName);\n        });\n        if (notAllowedProperties.length > 0) {\n            if (this.validatorOptions && this.validatorOptions.forbidNonWhitelisted) {\n                // throw errors\n                notAllowedProperties.forEach(function (property) {\n                    var _a;\n                    var validationError = _this.generateValidationError(object, object[property], property);\n                    validationError.constraints = (_a = {}, _a[ValidationTypes.WHITELIST] = \"property \" + property + \" should not exist\", _a);\n                    validationError.children = undefined;\n                    validationErrors.push(validationError);\n                });\n            }\n            else {\n                // strip non allowed properties\n                notAllowedProperties.forEach(function (property) { return delete object[property]; });\n            }\n        }\n    };\n    ValidationExecutor.prototype.stripEmptyErrors = function (errors) {\n        var _this = this;\n        return errors.filter(function (error) {\n            if (error.children) {\n                error.children = _this.stripEmptyErrors(error.children);\n            }\n            if (Object.keys(error.constraints).length === 0) {\n                if (error.children.length === 0) {\n                    return false;\n                }\n                else {\n                    delete error.constraints;\n                }\n            }\n            return true;\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    ValidationExecutor.prototype.performValidations = function (object, value, propertyName, definedMetadatas, metadatas, validationErrors) {\n        var customValidationMetadatas = metadatas.filter(function (metadata) { return metadata.type === ValidationTypes.CUSTOM_VALIDATION; });\n        var nestedValidationMetadatas = metadatas.filter(function (metadata) { return metadata.type === ValidationTypes.NESTED_VALIDATION; });\n        var conditionalValidationMetadatas = metadatas.filter(function (metadata) { return metadata.type === ValidationTypes.CONDITIONAL_VALIDATION; });\n        var validationError = this.generateValidationError(object, value, propertyName);\n        validationErrors.push(validationError);\n        var canValidate = this.conditionalValidations(object, value, conditionalValidationMetadatas);\n        if (!canValidate) {\n            return;\n        }\n        // handle IS_DEFINED validation type the special way - it should work no matter skipUndefinedProperties/skipMissingProperties is set or not\n        this.customValidations(object, value, definedMetadatas, validationError);\n        this.mapContexts(object, value, definedMetadatas, validationError);\n        if (value === undefined && this.validatorOptions && this.validatorOptions.skipUndefinedProperties === true) {\n            return;\n        }\n        if (value === null && this.validatorOptions && this.validatorOptions.skipNullProperties === true) {\n            return;\n        }\n        if ((value === null || value === undefined) &&\n            this.validatorOptions &&\n            this.validatorOptions.skipMissingProperties === true) {\n            return;\n        }\n        this.customValidations(object, value, customValidationMetadatas, validationError);\n        this.nestedValidations(value, nestedValidationMetadatas, validationError.children);\n        this.mapContexts(object, value, metadatas, validationError);\n        this.mapContexts(object, value, customValidationMetadatas, validationError);\n    };\n    ValidationExecutor.prototype.generateValidationError = function (object, value, propertyName) {\n        var validationError = new ValidationError();\n        if (!this.validatorOptions ||\n            !this.validatorOptions.validationError ||\n            this.validatorOptions.validationError.target === undefined ||\n            this.validatorOptions.validationError.target === true)\n            validationError.target = object;\n        if (!this.validatorOptions ||\n            !this.validatorOptions.validationError ||\n            this.validatorOptions.validationError.value === undefined ||\n            this.validatorOptions.validationError.value === true)\n            validationError.value = value;\n        validationError.property = propertyName;\n        validationError.children = [];\n        validationError.constraints = {};\n        return validationError;\n    };\n    ValidationExecutor.prototype.conditionalValidations = function (object, value, metadatas) {\n        return metadatas\n            .map(function (metadata) { return metadata.constraints[0](object, value); })\n            .reduce(function (resultA, resultB) { return resultA && resultB; }, true);\n    };\n    ValidationExecutor.prototype.customValidations = function (object, value, metadatas, error) {\n        var _this = this;\n        metadatas.forEach(function (metadata) {\n            _this.metadataStorage.getTargetValidatorConstraints(metadata.constraintCls).forEach(function (customConstraintMetadata) {\n                if (customConstraintMetadata.async && _this.ignoreAsyncValidations)\n                    return;\n                if (_this.validatorOptions &&\n                    _this.validatorOptions.stopAtFirstError &&\n                    Object.keys(error.constraints || {}).length > 0)\n                    return;\n                var validationArguments = {\n                    targetName: object.constructor ? object.constructor.name : undefined,\n                    property: metadata.propertyName,\n                    object: object,\n                    value: value,\n                    constraints: metadata.constraints,\n                };\n                if (!metadata.each || !(value instanceof Array || value instanceof Set || value instanceof Map)) {\n                    var validatedValue = customConstraintMetadata.instance.validate(value, validationArguments);\n                    if (isPromise(validatedValue)) {\n                        var promise = validatedValue.then(function (isValid) {\n                            if (!isValid) {\n                                var _a = _this.createValidationError(object, value, metadata, customConstraintMetadata), type = _a[0], message = _a[1];\n                                error.constraints[type] = message;\n                                if (metadata.context) {\n                                    if (!error.contexts) {\n                                        error.contexts = {};\n                                    }\n                                    error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n                                }\n                            }\n                        });\n                        _this.awaitingPromises.push(promise);\n                    }\n                    else {\n                        if (!validatedValue) {\n                            var _a = _this.createValidationError(object, value, metadata, customConstraintMetadata), type = _a[0], message = _a[1];\n                            error.constraints[type] = message;\n                        }\n                    }\n                    return;\n                }\n                // convert set and map into array\n                var arrayValue = convertToArray(value);\n                // Validation needs to be applied to each array item\n                var validatedSubValues = arrayValue.map(function (subValue) {\n                    return customConstraintMetadata.instance.validate(subValue, validationArguments);\n                });\n                var validationIsAsync = validatedSubValues.some(function (validatedSubValue) {\n                    return isPromise(validatedSubValue);\n                });\n                if (validationIsAsync) {\n                    // Wrap plain values (if any) in promises, so that all are async\n                    var asyncValidatedSubValues = validatedSubValues.map(function (validatedSubValue) {\n                        return isPromise(validatedSubValue) ? validatedSubValue : Promise.resolve(validatedSubValue);\n                    });\n                    var asyncValidationIsFinishedPromise = Promise.all(asyncValidatedSubValues).then(function (flatValidatedValues) {\n                        var validationResult = flatValidatedValues.every(function (isValid) { return isValid; });\n                        if (!validationResult) {\n                            var _a = _this.createValidationError(object, value, metadata, customConstraintMetadata), type = _a[0], message = _a[1];\n                            error.constraints[type] = message;\n                            if (metadata.context) {\n                                if (!error.contexts) {\n                                    error.contexts = {};\n                                }\n                                error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n                            }\n                        }\n                    });\n                    _this.awaitingPromises.push(asyncValidationIsFinishedPromise);\n                    return;\n                }\n                var validationResult = validatedSubValues.every(function (isValid) { return isValid; });\n                if (!validationResult) {\n                    var _b = _this.createValidationError(object, value, metadata, customConstraintMetadata), type = _b[0], message = _b[1];\n                    error.constraints[type] = message;\n                }\n            });\n        });\n    };\n    ValidationExecutor.prototype.nestedValidations = function (value, metadatas, errors) {\n        var _this = this;\n        if (value === void 0) {\n            return;\n        }\n        metadatas.forEach(function (metadata) {\n            var _a;\n            if (metadata.type !== ValidationTypes.NESTED_VALIDATION && metadata.type !== ValidationTypes.PROMISE_VALIDATION) {\n                return;\n            }\n            if (value instanceof Array || value instanceof Set || value instanceof Map) {\n                // Treats Set as an array - as index of Set value is value itself and it is common case to have Object as value\n                var arrayLikeValue = value instanceof Set ? Array.from(value) : value;\n                arrayLikeValue.forEach(function (subValue, index) {\n                    _this.performValidations(value, subValue, index.toString(), [], metadatas, errors);\n                });\n            }\n            else if (value instanceof Object) {\n                var targetSchema = typeof metadata.target === 'string' ? metadata.target : metadata.target.name;\n                _this.execute(value, targetSchema, errors);\n            }\n            else {\n                var error = new ValidationError();\n                error.value = value;\n                error.property = metadata.propertyName;\n                error.target = metadata.target;\n                var _b = _this.createValidationError(metadata.target, value, metadata), type = _b[0], message = _b[1];\n                error.constraints = (_a = {},\n                    _a[type] = message,\n                    _a);\n                errors.push(error);\n            }\n        });\n    };\n    ValidationExecutor.prototype.mapContexts = function (object, value, metadatas, error) {\n        var _this = this;\n        return metadatas.forEach(function (metadata) {\n            if (metadata.context) {\n                var customConstraint = void 0;\n                if (metadata.type === ValidationTypes.CUSTOM_VALIDATION) {\n                    var customConstraints = _this.metadataStorage.getTargetValidatorConstraints(metadata.constraintCls);\n                    customConstraint = customConstraints[0];\n                }\n                var type = _this.getConstraintType(metadata, customConstraint);\n                if (error.constraints[type]) {\n                    if (!error.contexts) {\n                        error.contexts = {};\n                    }\n                    error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n                }\n            }\n        });\n    };\n    ValidationExecutor.prototype.createValidationError = function (object, value, metadata, customValidatorMetadata) {\n        var targetName = object.constructor ? object.constructor.name : undefined;\n        var type = this.getConstraintType(metadata, customValidatorMetadata);\n        var validationArguments = {\n            targetName: targetName,\n            property: metadata.propertyName,\n            object: object,\n            value: value,\n            constraints: metadata.constraints,\n        };\n        var message = metadata.message || '';\n        if (!metadata.message &&\n            (!this.validatorOptions || (this.validatorOptions && !this.validatorOptions.dismissDefaultMessages))) {\n            if (customValidatorMetadata && customValidatorMetadata.instance.defaultMessage instanceof Function) {\n                message = customValidatorMetadata.instance.defaultMessage(validationArguments);\n            }\n        }\n        var messageString = ValidationUtils.replaceMessageSpecialTokens(message, validationArguments);\n        return [type, messageString];\n    };\n    ValidationExecutor.prototype.getConstraintType = function (metadata, customValidatorMetadata) {\n        var type = customValidatorMetadata && customValidatorMetadata.name ? customValidatorMetadata.name : metadata.type;\n        return type;\n    };\n    return ValidationExecutor;\n}());\nexport { ValidationExecutor };\n//# sourceMappingURL=ValidationExecutor.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { ValidationExecutor } from './ValidationExecutor';\n/**\n * Validator performs validation of the given object based on its metadata.\n */\nvar Validator = /** @class */ (function () {\n    function Validator() {\n    }\n    /**\n     * Performs validation of the given object based on decorators or validation schema.\n     */\n    Validator.prototype.validate = function (objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {\n        return this.coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions);\n    };\n    /**\n     * Performs validation of the given object based on decorators or validation schema and reject on error.\n     */\n    Validator.prototype.validateOrReject = function (objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errors;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions)];\n                    case 1:\n                        errors = _a.sent();\n                        if (errors.length)\n                            return [2 /*return*/, Promise.reject(errors)];\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Performs validation of the given object based on decorators or validation schema.\n     */\n    Validator.prototype.validateSync = function (objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {\n        var object = typeof objectOrSchemaName === 'string' ? objectOrValidationOptions : objectOrSchemaName;\n        var options = typeof objectOrSchemaName === 'string' ? maybeValidatorOptions : objectOrValidationOptions;\n        var schema = typeof objectOrSchemaName === 'string' ? objectOrSchemaName : undefined;\n        var executor = new ValidationExecutor(this, options);\n        executor.ignoreAsyncValidations = true;\n        var validationErrors = [];\n        executor.execute(object, schema, validationErrors);\n        return executor.stripEmptyErrors(validationErrors);\n    };\n    // -------------------------------------------------------------------------\n    // Private Properties\n    // -------------------------------------------------------------------------\n    /**\n     * Performs validation of the given object based on decorators or validation schema.\n     * Common method for `validateOrReject` and `validate` methods.\n     */\n    Validator.prototype.coreValidate = function (objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {\n        var object = typeof objectOrSchemaName === 'string' ? objectOrValidationOptions : objectOrSchemaName;\n        var options = typeof objectOrSchemaName === 'string' ? maybeValidatorOptions : objectOrValidationOptions;\n        var schema = typeof objectOrSchemaName === 'string' ? objectOrSchemaName : undefined;\n        var executor = new ValidationExecutor(this, options);\n        var validationErrors = [];\n        executor.execute(object, schema, validationErrors);\n        return Promise.all(executor.awaitingPromises).then(function () {\n            return executor.stripEmptyErrors(validationErrors);\n        });\n    };\n    return Validator;\n}());\nexport { Validator };\n//# sourceMappingURL=Validator.js.map","import { getMetadataStorage } from './metadata/MetadataStorage';\nimport { Validator } from './validation/Validator';\nimport { getFromContainer } from './container';\n// -------------------------------------------------------------------------\n// Export everything api users needs\n// -------------------------------------------------------------------------\nexport * from './container';\nexport * from './decorator/decorators';\nexport * from './decorator/ValidationOptions';\nexport * from './validation/ValidatorConstraintInterface';\nexport * from './validation/ValidationError';\nexport * from './validation/ValidatorOptions';\nexport * from './validation/ValidationArguments';\nexport * from './validation/ValidationTypes';\nexport * from './validation/Validator';\nexport * from './validation-schema/ValidationSchema';\nexport * from './register-decorator';\nexport * from './metadata/MetadataStorage';\n/**\n * Validates given object by object's decorators or given validation schema.\n */\nexport function validate(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {\n    if (typeof schemaNameOrObject === 'string') {\n        return getFromContainer(Validator).validate(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);\n    }\n    else {\n        return getFromContainer(Validator).validate(schemaNameOrObject, objectOrValidationOptions);\n    }\n}\n/**\n * Validates given object by object's decorators or given validation schema and reject on error.\n */\nexport function validateOrReject(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {\n    if (typeof schemaNameOrObject === 'string') {\n        return getFromContainer(Validator).validateOrReject(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);\n    }\n    else {\n        return getFromContainer(Validator).validateOrReject(schemaNameOrObject, objectOrValidationOptions);\n    }\n}\n/**\n * Validates given object by object's decorators or given validation schema.\n * Note that this method completely ignores async validations.\n * If you want to properly perform validation you need to call validate method instead.\n */\nexport function validateSync(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {\n    if (typeof schemaNameOrObject === 'string') {\n        return getFromContainer(Validator).validateSync(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);\n    }\n    else {\n        return getFromContainer(Validator).validateSync(schemaNameOrObject, objectOrValidationOptions);\n    }\n}\n/**\n * Registers a new validation schema.\n */\nexport function registerSchema(schema) {\n    getMetadataStorage().addValidationSchema(schema);\n}\n//# sourceMappingURL=index.js.map","var DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\nvar propertyIsEnumerable = uncurryThis($propertyIsEnumerable);\nvar push = uncurryThis([].push);\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable(O, key)) {\n        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.es/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.es/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n"],"sourceRoot":""}