{"version":3,"sources":["webpack:///./node_modules/validator/lib/isLength.js","webpack:///./node_modules/class-validator/esm5/container.js","webpack:///./node_modules/class-validator/esm5/decorator/common/ValidateBy.js","webpack:///./node_modules/class-validator/esm5/validation-schema/ValidationSchemaToMetadataTransformer.js","webpack:///./node_modules/class-validator/esm5/metadata/MetadataStorage.js","webpack:///./node_modules/class-validator/esm5/validation/ValidationTypes.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/class-validator/esm5/metadata/ConstraintMetadata.js","webpack:///./node_modules/class-validator/esm5/register-decorator.js","webpack:///./node_modules/class-validator/esm5/decorator/string/MaxLength.js","webpack:///./node_modules/class-validator/esm5/utils/get-global.util.js","webpack:///./node_modules/validator/lib/util/assertString.js","webpack:///./node_modules/class-validator/esm5/metadata/ValidationMetadata.js","webpack:///./node_modules/class-validator/esm5/decorator/common/IsNotEmpty.js"],"names":["Object","defineProperty","exports","value","default","isLength","_assertString","_interopRequireDefault","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","str","options","min","max","arguments","surrogatePairs","match","len","length","module","userContainer","userContainerOptions","defaultContainer","class_1","this","instances","get","someClass","instance","find","type","object","push","getFromContainer","fallback","error","fallbackOnErrors","buildMessage","impl","validationOptions","validationArguments","eachPrefix","each","ValidateBy","propertyName","name","target","constraints","validator","ValidationSchemaToMetadataTransformer","transform","schema","metadatas","keys","properties","forEach","property","validation","message","groups","always","args","validationTypeOptions","ValidationMetadata","MetadataStorage","validationMetadatas","constraintMetadatas","enumerable","configurable","addValidationSchema","_this","validationMetadata","addValidationMetadata","metadata","addConstraintMetadata","groupByPropertyName","grouped","getTargetValidationMetadatas","targetConstructor","targetSchema","strictGroups","includeMetadataBecauseOfAlwaysOption","excludeMetadataBecauseOfStrictGroupsOption","originalMetadatas","filter","group","indexOf","inheritedMetadatas","Function","uniqueInheritedMetadatas","inheritedMetadata","originalMetadata","concat","getTargetValidatorConstraints","getMetadataStorage","global","classValidatorMetadataStorage","ValidationTypes","isValid","map","key","CUSTOM_VALIDATION","NESTED_VALIDATION","PROMISE_VALIDATION","CONDITIONAL_VALIDATION","WHITELIST","IS_DEFINED","__decorate","decorators","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","i","ConstraintMetadata","async","registerDecorator","constraintCls","constraintClasses","validator_1","CustomConstraint","validate","defaultMessage","validationMetadataArgs","MAX_LENGTH","maxLength","MaxLength","getGlobal","globalThis","window","self","assertString","input","isString","String","invalidType","TypeError","context","undefined","IS_NOT_EMPTY","isNotEmpty","IsNotEmpty"],"mappings":"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","file":"js/chunk-5d401159.7e237f43.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLength;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable prefer-rest-params */\nfunction isLength(str, options) {\n  (0, _assertString.default)(str);\n  var min;\n  var max;\n\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isLength(str, min [, max])\n    min = arguments[1] || 0;\n    max = arguments[2];\n  }\n\n  var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n  var len = str.length - surrogatePairs.length;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","/**\n * Container to be used by this library for inversion control. If container was not implicitly set then by default\n * container simply creates a new instance of the given class.\n */\nvar defaultContainer = new (/** @class */ (function () {\n    function class_1() {\n        this.instances = [];\n    }\n    class_1.prototype.get = function (someClass) {\n        var instance = this.instances.find(function (instance) { return instance.type === someClass; });\n        if (!instance) {\n            instance = { type: someClass, object: new someClass() };\n            this.instances.push(instance);\n        }\n        return instance.object;\n    };\n    return class_1;\n}()))();\nvar userContainer;\nvar userContainerOptions;\n/**\n * Sets container to be used by this library.\n */\nexport function useContainer(iocContainer, options) {\n    userContainer = iocContainer;\n    userContainerOptions = options;\n}\n/**\n * Gets the IOC container used by this library.\n */\nexport function getFromContainer(someClass) {\n    if (userContainer) {\n        try {\n            var instance = userContainer.get(someClass);\n            if (instance)\n                return instance;\n            if (!userContainerOptions || !userContainerOptions.fallback)\n                return instance;\n        }\n        catch (error) {\n            if (!userContainerOptions || !userContainerOptions.fallbackOnErrors)\n                throw error;\n        }\n    }\n    return defaultContainer.get(someClass);\n}\n//# sourceMappingURL=container.js.map","import { registerDecorator } from '../../register-decorator';\nexport function buildMessage(impl, validationOptions) {\n    return function (validationArguments) {\n        var eachPrefix = validationOptions && validationOptions.each ? 'each value in ' : '';\n        return impl(eachPrefix, validationArguments);\n    };\n}\nexport function ValidateBy(options, validationOptions) {\n    return function (object, propertyName) {\n        registerDecorator({\n            name: options.name,\n            target: object.constructor,\n            propertyName: propertyName,\n            options: validationOptions,\n            constraints: options.constraints,\n            validator: options.validator,\n        });\n    };\n}\n//# sourceMappingURL=ValidateBy.js.map","import { ValidationMetadata } from '../metadata/ValidationMetadata';\n/**\n * Used to transform validation schemas to validation metadatas.\n */\nvar ValidationSchemaToMetadataTransformer = /** @class */ (function () {\n    function ValidationSchemaToMetadataTransformer() {\n    }\n    ValidationSchemaToMetadataTransformer.prototype.transform = function (schema) {\n        var metadatas = [];\n        Object.keys(schema.properties).forEach(function (property) {\n            schema.properties[property].forEach(function (validation) {\n                var validationOptions = {\n                    message: validation.message,\n                    groups: validation.groups,\n                    always: validation.always,\n                    each: validation.each,\n                };\n                var args = {\n                    type: validation.type,\n                    target: schema.name,\n                    propertyName: property,\n                    constraints: validation.constraints,\n                    validationTypeOptions: validation.options,\n                    validationOptions: validationOptions,\n                };\n                metadatas.push(new ValidationMetadata(args));\n            });\n        });\n        return metadatas;\n    };\n    return ValidationSchemaToMetadataTransformer;\n}());\nexport { ValidationSchemaToMetadataTransformer };\n//# sourceMappingURL=ValidationSchemaToMetadataTransformer.js.map","import { ValidationSchemaToMetadataTransformer } from '../validation-schema/ValidationSchemaToMetadataTransformer';\nimport { getGlobal } from '../utils';\n/**\n * Storage all metadatas.\n */\nvar MetadataStorage = /** @class */ (function () {\n    function MetadataStorage() {\n        // -------------------------------------------------------------------------\n        // Private properties\n        // -------------------------------------------------------------------------\n        this.validationMetadatas = [];\n        this.constraintMetadatas = [];\n    }\n    Object.defineProperty(MetadataStorage.prototype, \"hasValidationMetaData\", {\n        get: function () {\n            return !!this.validationMetadatas.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Adds a new validation metadata.\n     */\n    MetadataStorage.prototype.addValidationSchema = function (schema) {\n        var _this = this;\n        var validationMetadatas = new ValidationSchemaToMetadataTransformer().transform(schema);\n        validationMetadatas.forEach(function (validationMetadata) { return _this.addValidationMetadata(validationMetadata); });\n    };\n    /**\n     * Adds a new validation metadata.\n     */\n    MetadataStorage.prototype.addValidationMetadata = function (metadata) {\n        this.validationMetadatas.push(metadata);\n    };\n    /**\n     * Adds a new constraint metadata.\n     */\n    MetadataStorage.prototype.addConstraintMetadata = function (metadata) {\n        this.constraintMetadatas.push(metadata);\n    };\n    /**\n     * Groups metadata by their property names.\n     */\n    MetadataStorage.prototype.groupByPropertyName = function (metadata) {\n        var grouped = {};\n        metadata.forEach(function (metadata) {\n            if (!grouped[metadata.propertyName])\n                grouped[metadata.propertyName] = [];\n            grouped[metadata.propertyName].push(metadata);\n        });\n        return grouped;\n    };\n    /**\n     * Gets all validation metadatas for the given object with the given groups.\n     */\n    MetadataStorage.prototype.getTargetValidationMetadatas = function (targetConstructor, targetSchema, always, strictGroups, groups) {\n        var includeMetadataBecauseOfAlwaysOption = function (metadata) {\n            // `metadata.always` overrides global default.\n            if (typeof metadata.always !== 'undefined')\n                return metadata.always;\n            // `metadata.groups` overrides global default.\n            if (metadata.groups && metadata.groups.length)\n                return false;\n            // Use global default.\n            return always;\n        };\n        var excludeMetadataBecauseOfStrictGroupsOption = function (metadata) {\n            if (strictGroups) {\n                // Validation is not using groups.\n                if (!groups || !groups.length) {\n                    // `metadata.groups` has at least one group.\n                    if (metadata.groups && metadata.groups.length)\n                        return true;\n                }\n            }\n            return false;\n        };\n        // get directly related to a target metadatas\n        var originalMetadatas = this.validationMetadatas.filter(function (metadata) {\n            if (metadata.target !== targetConstructor && metadata.target !== targetSchema)\n                return false;\n            if (includeMetadataBecauseOfAlwaysOption(metadata))\n                return true;\n            if (excludeMetadataBecauseOfStrictGroupsOption(metadata))\n                return false;\n            if (groups && groups.length > 0)\n                return metadata.groups && !!metadata.groups.find(function (group) { return groups.indexOf(group) !== -1; });\n            return true;\n        });\n        // get metadatas for inherited classes\n        var inheritedMetadatas = this.validationMetadatas.filter(function (metadata) {\n            // if target is a string it's means we validate against a schema, and there is no inheritance support for schemas\n            if (typeof metadata.target === 'string')\n                return false;\n            if (metadata.target === targetConstructor)\n                return false;\n            if (metadata.target instanceof Function && !(targetConstructor.prototype instanceof metadata.target))\n                return false;\n            if (includeMetadataBecauseOfAlwaysOption(metadata))\n                return true;\n            if (excludeMetadataBecauseOfStrictGroupsOption(metadata))\n                return false;\n            if (groups && groups.length > 0)\n                return metadata.groups && !!metadata.groups.find(function (group) { return groups.indexOf(group) !== -1; });\n            return true;\n        });\n        // filter out duplicate metadatas, prefer original metadatas instead of inherited metadatas\n        var uniqueInheritedMetadatas = inheritedMetadatas.filter(function (inheritedMetadata) {\n            return !originalMetadatas.find(function (originalMetadata) {\n                return (originalMetadata.propertyName === inheritedMetadata.propertyName &&\n                    originalMetadata.type === inheritedMetadata.type);\n            });\n        });\n        return originalMetadatas.concat(uniqueInheritedMetadatas);\n    };\n    /**\n     * Gets all validator constraints for the given object.\n     */\n    MetadataStorage.prototype.getTargetValidatorConstraints = function (target) {\n        return this.constraintMetadatas.filter(function (metadata) { return metadata.target === target; });\n    };\n    return MetadataStorage;\n}());\nexport { MetadataStorage };\n/**\n * Gets metadata storage.\n * Metadata storage follows the best practices and stores metadata in a global variable.\n */\nexport function getMetadataStorage() {\n    var global = getGlobal();\n    if (!global.classValidatorMetadataStorage) {\n        global.classValidatorMetadataStorage = new MetadataStorage();\n    }\n    return global.classValidatorMetadataStorage;\n}\n//# sourceMappingURL=MetadataStorage.js.map","/**\n * Validation types.\n */\nvar ValidationTypes = /** @class */ (function () {\n    function ValidationTypes() {\n    }\n    /**\n     * Checks if validation type is valid.\n     */\n    ValidationTypes.isValid = function (type) {\n        var _this = this;\n        return (type !== 'isValid' &&\n            type !== 'getMessage' &&\n            Object.keys(this)\n                .map(function (key) { return _this[key]; })\n                .indexOf(type) !== -1);\n    };\n    /* system */\n    ValidationTypes.CUSTOM_VALIDATION = 'customValidation'; // done\n    ValidationTypes.NESTED_VALIDATION = 'nestedValidation'; // done\n    ValidationTypes.PROMISE_VALIDATION = 'promiseValidation'; // done\n    ValidationTypes.CONDITIONAL_VALIDATION = 'conditionalValidation'; // done\n    ValidationTypes.WHITELIST = 'whitelistValidation'; // done\n    ValidationTypes.IS_DEFINED = 'isDefined'; // done\n    return ValidationTypes;\n}());\nexport { ValidationTypes };\n//# sourceMappingURL=ValidationTypes.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { getFromContainer } from '../container';\n/**\n * This metadata interface contains information for custom validators.\n */\nvar ConstraintMetadata = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ConstraintMetadata(target, name, async) {\n        if (async === void 0) { async = false; }\n        this.target = target;\n        this.name = name;\n        this.async = async;\n    }\n    Object.defineProperty(ConstraintMetadata.prototype, \"instance\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Instance of the target custom validation class which performs validation.\n         */\n        get: function () {\n            return getFromContainer(this.target);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ConstraintMetadata;\n}());\nexport { ConstraintMetadata };\n//# sourceMappingURL=ConstraintMetadata.js.map","import { ConstraintMetadata } from './metadata/ConstraintMetadata';\nimport { ValidationMetadata } from './metadata/ValidationMetadata';\nimport { ValidationTypes } from './validation/ValidationTypes';\nimport { getFromContainer } from './container';\nimport { MetadataStorage, getMetadataStorage } from './metadata/MetadataStorage';\n/**\n * Registers a custom validation decorator.\n */\nexport function registerDecorator(options) {\n    var constraintCls;\n    if (options.validator instanceof Function) {\n        constraintCls = options.validator;\n        var constraintClasses = getFromContainer(MetadataStorage).getTargetValidatorConstraints(options.validator);\n        if (constraintClasses.length > 1) {\n            throw \"More than one implementation of ValidatorConstraintInterface found for validator on: \" + options.target.name + \":\" + options.propertyName;\n        }\n    }\n    else {\n        var validator_1 = options.validator;\n        constraintCls = /** @class */ (function () {\n            function CustomConstraint() {\n            }\n            CustomConstraint.prototype.validate = function (value, validationArguments) {\n                return validator_1.validate(value, validationArguments);\n            };\n            CustomConstraint.prototype.defaultMessage = function (validationArguments) {\n                if (validator_1.defaultMessage) {\n                    return validator_1.defaultMessage(validationArguments);\n                }\n                return '';\n            };\n            return CustomConstraint;\n        }());\n        getMetadataStorage().addConstraintMetadata(new ConstraintMetadata(constraintCls, options.name, options.async));\n    }\n    var validationMetadataArgs = {\n        type: options.name && ValidationTypes.isValid(options.name) ? options.name : ValidationTypes.CUSTOM_VALIDATION,\n        target: options.target,\n        propertyName: options.propertyName,\n        validationOptions: options.options,\n        constraintCls: constraintCls,\n        constraints: options.constraints,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(validationMetadataArgs));\n}\n//# sourceMappingURL=register-decorator.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\nexport var MAX_LENGTH = 'maxLength';\n/**\n * Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function maxLength(value, max) {\n    return typeof value === 'string' && isLengthValidator(value, { min: 0, max: max });\n}\n/**\n * Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function MaxLength(max, validationOptions) {\n    return ValidateBy({\n        name: MAX_LENGTH,\n        constraints: [max],\n        validator: {\n            validate: function (value, args) { return maxLength(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be shorter than or equal to $constraint1 characters'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=MaxLength.js.map","/**\n * This function returns the global object across Node and browsers.\n *\n * Note: `globalThis` is the standardized approach however it has been added to\n * Node.js in version 12. We need to include this snippet until Node 12 EOL.\n */\nexport function getGlobal() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: Cannot find name 'window'.\n    if (typeof window !== 'undefined') {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: Cannot find name 'window'.\n        return window;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: Cannot find name 'self'.\n    if (typeof self !== 'undefined') {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: Cannot find name 'self'.\n        return self;\n    }\n}\n//# sourceMappingURL=get-global.util.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","/**\n * This metadata contains validation rules.\n */\nvar ValidationMetadata = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ValidationMetadata(args) {\n        /**\n         * Validation groups used for this validation.\n         */\n        this.groups = [];\n        /**\n         * Specifies if validated value is an array and each of its item must be validated.\n         */\n        this.each = false;\n        /*\n         * A transient set of data passed through to the validation result for response mapping\n         */\n        this.context = undefined;\n        this.type = args.type;\n        this.target = args.target;\n        this.propertyName = args.propertyName;\n        this.constraints = args.constraints;\n        this.constraintCls = args.constraintCls;\n        this.validationTypeOptions = args.validationTypeOptions;\n        if (args.validationOptions) {\n            this.message = args.validationOptions.message;\n            this.groups = args.validationOptions.groups;\n            this.always = args.validationOptions.always;\n            this.each = args.validationOptions.each;\n            this.context = args.validationOptions.context;\n        }\n    }\n    return ValidationMetadata;\n}());\nexport { ValidationMetadata };\n//# sourceMappingURL=ValidationMetadata.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_NOT_EMPTY = 'isNotEmpty';\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function isNotEmpty(value) {\n    return value !== '' && value !== null && value !== undefined;\n}\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function IsNotEmpty(validationOptions) {\n    return ValidateBy({\n        name: IS_NOT_EMPTY,\n        validator: {\n            validate: function (value, args) { return isNotEmpty(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property should not be empty'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsNotEmpty.js.map"],"sourceRoot":""}